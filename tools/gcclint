
#!/bin/bash

#set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
IFS=$'\t\n'

GCC=$(type -p gcc)
PCLP_EXE=$PCLP_PATH/pclp64_linux
GCC_VERSION=$($GCC --version | head -n 1 | sed -r -e "s/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/")
SETTINGS_DIR=$HOME/.gxxlint-$GCC_VERSION

# If settings directory doesn't exist, create and fill it.
if [ ! -d "$SETTINGS_DIR" ]
then
	echo -n "Creating settings directory $SETTINGS_DIR... " >&2
	mkdir -p "$SETTINGS_DIR"
	pushd "$SETTINGS_DIR" >/dev/null

	# Generate settings for GNU family compiler
	# This handles both C and C++ files
	"$PCLP_PATH/config/pclp_config.py" \
		--compiler=gcc \
		--compiler-bin="$GCC" \
		--config-output-lnt-file=co-gcc.lnt \
		--config-output-header-file=co-gcc.h \
		--generate-compiler-config
	echo '//lint -cond(%LINT_VERSION% <= 1020, --u_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED)' >>co-gcc.h

	echo "DONE" >&2
	popd >/dev/null
fi

# Now, invoke PC-lint Plus.
# shellcheck disable=SC2046
"$PCLP_EXE" -max_threads="$(nproc)" -i"$SETTINGS_DIR" co-gcc.lnt \
$("$PCLP_PATH/config/pclp_config.py" \
	--compiler=gcc \
	--imposter-file=<("$PCLP_PATH/imposter" "$@") \
	--config-output-lnt-file=/dev/stdout \
	--generate-project-config)
